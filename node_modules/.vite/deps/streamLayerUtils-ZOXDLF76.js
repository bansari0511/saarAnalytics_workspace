import {
  $,
  P
} from "./chunk-TL2GFKZP.js";
import "./chunk-NSRXHIXQ.js";
import "./chunk-NCWIYJUO.js";
import "./chunk-IYBFICHV.js";
import {
  E,
  c,
  i,
  l
} from "./chunk-VJN4WONG.js";
import "./chunk-WSMONZ65.js";
import "./chunk-GIMN3QZ5.js";
import "./chunk-HGJX23PN.js";
import "./chunk-N77BULFI.js";
import "./chunk-NEIJCC5O.js";
import "./chunk-UMUW6RKM.js";
import "./chunk-BZEUWBAD.js";
import "./chunk-RKF6WUZT.js";
import "./chunk-ZBYB4REQ.js";
import "./chunk-YYLIW24Q.js";
import "./chunk-B7BH33JH.js";
import "./chunk-UGTAETXR.js";
import "./chunk-GUADICE2.js";
import "./chunk-AY7ZETF7.js";
import "./chunk-NYEIVTKF.js";
import "./chunk-ZJQPHR3K.js";
import "./chunk-XK66VICH.js";
import "./chunk-HLST5KGP.js";
import "./chunk-PDFWMXUS.js";
import "./chunk-5HCEYXY5.js";
import "./chunk-H6YQECN2.js";
import "./chunk-6JCZVSRM.js";
import "./chunk-LLGOMKTE.js";
import "./chunk-TRJUNZSW.js";
import "./chunk-IBLVGHDR.js";
import "./chunk-GYTEHLOC.js";
import "./chunk-SPNGBO6M.js";
import "./chunk-LPCUYJ2B.js";
import "./chunk-67AKDROO.js";
import "./chunk-JA3AQLAK.js";
import "./chunk-GWXO4XME.js";
import "./chunk-S62CSPIH.js";
import "./chunk-X26VPODZ.js";
import "./chunk-XNYPRDKK.js";
import "./chunk-YWPUEUEP.js";
import "./chunk-T3PXBZJ3.js";
import "./chunk-BMQ3IPHR.js";
import "./chunk-JNYZ3I5R.js";
import "./chunk-Y4BWIIWH.js";
import "./chunk-3QHX4R4B.js";
import "./chunk-TTJIKWMC.js";
import "./chunk-CMEG2CKL.js";
import "./chunk-VHPBXBDE.js";
import "./chunk-6ACTD4UJ.js";
import "./chunk-5REYU5G2.js";
import "./chunk-N626Y23H.js";
import "./chunk-TJPLHZCD.js";
import "./chunk-KLFJ5V5G.js";
import "./chunk-EP7EDY5M.js";

// node_modules/@arcgis/core/layers/save/streamLayerUtils.js
var n = "Stream Service";
var i2 = "Feed";
var o = "stream-layer-save";
var m = "stream-layer-save-as";
function u(e) {
  return { isValid: "stream" === e.type && !!e.url && !e.webSocketUrl, errorMessage: "Stream layer should be created using a url to a stream service" };
}
function c2(e) {
  const t = e.layerJSON;
  return Promise.resolve(t && Object.keys(t).length ? t : null);
}
async function y(e, t) {
  const { parsedUrl: n2, title: i3, fullExtent: o2 } = e;
  t.url = n2.path, t.title ||= i3, t.extent = null, null != o2 && (t.extent = await l(o2)), c(t, E.METADATA), i(t, E.SINGLE_LAYER);
}
async function p(t, r) {
  return P({ layer: t, itemType: n, additionalItemType: i2, validateLayer: u, createItemData: c2, errorNamePrefix: o }, r);
}
async function f(e, r, a) {
  return $({ layer: e, itemType: n, validateLayer: u, createItemData: c2, errorNamePrefix: m, newItem: r, setItemProperties: y }, a);
}
export {
  p as save,
  f as saveAs
};
//# sourceMappingURL=streamLayerUtils-ZOXDLF76.js.map
