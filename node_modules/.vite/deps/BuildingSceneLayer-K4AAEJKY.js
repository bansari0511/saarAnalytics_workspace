import {
  n as n4,
  p as p4
} from "./chunk-VE25II2F.js";
import {
  t as t4
} from "./chunk-YYAWQF2D.js";
import {
  a as a6,
  m as m4,
  p as p3,
  y
} from "./chunk-SH5Z6GRP.js";
import {
  R as R2,
  V as V3,
  r as r3
} from "./chunk-JQTLOKD4.js";
import {
  $,
  Z as Z2,
  w
} from "./chunk-WHNSSW5C.js";
import "./chunk-LTRKOFTZ.js";
import {
  B
} from "./chunk-NC6ZZGDK.js";
import "./chunk-QYDHMHNZ.js";
import "./chunk-K52L3TE2.js";
import "./chunk-ZYWMFOAJ.js";
import "./chunk-P6JUINPJ.js";
import "./chunk-RHVCSVQD.js";
import "./chunk-HXOI7XVG.js";
import "./chunk-KRZHFMU4.js";
import "./chunk-BWEEMT5B.js";
import "./chunk-JITSIG7E.js";
import "./chunk-Q75IV5IU.js";
import "./chunk-OHGGPE27.js";
import "./chunk-CGESJDPA.js";
import "./chunk-RZPBZYCG.js";
import "./chunk-O3DVK2IK.js";
import "./chunk-FL3AEKKI.js";
import "./chunk-TNLCQYJ3.js";
import "./chunk-OJQPIMLV.js";
import "./chunk-FXWNGVAA.js";
import "./chunk-6HU6D6AI.js";
import "./chunk-MJTI6OYZ.js";
import "./chunk-NSRXHIXQ.js";
import "./chunk-NCWIYJUO.js";
import {
  Xe
} from "./chunk-3A63WODW.js";
import "./chunk-73734L7I.js";
import "./chunk-K6CAHOYR.js";
import "./chunk-6PSWWIGY.js";
import "./chunk-X54A5S3J.js";
import "./chunk-BZSAIP56.js";
import "./chunk-IQFA7YIN.js";
import "./chunk-GHJ57TNG.js";
import "./chunk-AZW6GDWJ.js";
import "./chunk-MFXX2MV4.js";
import "./chunk-O6RGVUWL.js";
import "./chunk-G2YKZHYQ.js";
import {
  s as s4
} from "./chunk-FGPKHX4G.js";
import "./chunk-R7CNDNGI.js";
import "./chunk-KGDMV4MR.js";
import "./chunk-MZ6XR6HP.js";
import "./chunk-DBTEUCHQ.js";
import {
  i as i3
} from "./chunk-MI2SWXYL.js";
import "./chunk-RSMXPB5H.js";
import {
  l as l2
} from "./chunk-FI7A2I5K.js";
import "./chunk-2FIN3MB5.js";
import "./chunk-GBOUNRWE.js";
import "./chunk-NL2NZDM4.js";
import "./chunk-JSADYHZ3.js";
import "./chunk-7SLD6UJQ.js";
import {
  e
} from "./chunk-FBQHQDLT.js";
import "./chunk-CCSAZNG5.js";
import "./chunk-7QI7J4JB.js";
import {
  p as p2
} from "./chunk-TDFQY4TL.js";
import "./chunk-BPVOXAWI.js";
import "./chunk-K54LZFQX.js";
import "./chunk-URBRKEAB.js";
import "./chunk-FT4FDH6N.js";
import {
  t as t2
} from "./chunk-XGN6BPAP.js";
import {
  b2 as b,
  c2,
  d as d3,
  g,
  l as l4,
  m as m3
} from "./chunk-FAYGOXZ3.js";
import "./chunk-SIRTOV2N.js";
import {
  u
} from "./chunk-7VD3IPFA.js";
import "./chunk-KFLBCUTX.js";
import {
  j as j2
} from "./chunk-TYGU3EXP.js";
import {
  S,
  a as a5
} from "./chunk-ZQUEN26P.js";
import "./chunk-7WMSTTK2.js";
import "./chunk-PNZTL5C4.js";
import "./chunk-EU5HNJUP.js";
import "./chunk-TNGT5LD3.js";
import "./chunk-RFR37KMN.js";
import "./chunk-LGP2VQ3W.js";
import "./chunk-YKZMZKSQ.js";
import {
  N
} from "./chunk-QVVUEHRT.js";
import "./chunk-5H6DUUYZ.js";
import "./chunk-NBK7CQDR.js";
import "./chunk-4COYKAT6.js";
import "./chunk-4PMAEDAD.js";
import "./chunk-SM6D23CI.js";
import "./chunk-CKXK33BB.js";
import "./chunk-7BL5FEWJ.js";
import "./chunk-OAEHASLX.js";
import "./chunk-TOD32WVA.js";
import "./chunk-DTPLSS5W.js";
import "./chunk-PX666UG6.js";
import "./chunk-AR6ZOSCT.js";
import "./chunk-PTLGJ4Y6.js";
import "./chunk-7QAQW3R4.js";
import "./chunk-XSLTJTXI.js";
import "./chunk-KFNWBWN4.js";
import "./chunk-K55CXVYD.js";
import {
  s as s3
} from "./chunk-GZTZGGOM.js";
import "./chunk-NPBOPMAJ.js";
import "./chunk-EEG2HGFZ.js";
import "./chunk-KCEUIRTN.js";
import "./chunk-KX3QNWMZ.js";
import "./chunk-HPADPQJ7.js";
import "./chunk-CIYAWLSD.js";
import "./chunk-GDJLDPJ6.js";
import "./chunk-SE3G7TVO.js";
import "./chunk-ZWFRZAOO.js";
import "./chunk-ZLQRJCGG.js";
import "./chunk-ULRXIASY.js";
import "./chunk-BUFVT7AD.js";
import "./chunk-RHCPQ6AS.js";
import "./chunk-NN5O537H.js";
import "./chunk-3JKWT76Y.js";
import "./chunk-LOLNWH3R.js";
import {
  c
} from "./chunk-WMN22ENS.js";
import "./chunk-UZ3YWBWC.js";
import "./chunk-K5CV62SX.js";
import "./chunk-2EOHKZLO.js";
import "./chunk-S7GLMIAQ.js";
import "./chunk-T7S34Q47.js";
import {
  Z
} from "./chunk-AZ6KC3UF.js";
import "./chunk-UICDKBDP.js";
import "./chunk-3M6ALZOH.js";
import "./chunk-QPV4BKBC.js";
import "./chunk-LQQCPLIT.js";
import "./chunk-4O46EK5T.js";
import "./chunk-GQBGK7RW.js";
import "./chunk-EMULKSUV.js";
import "./chunk-AY3JR4QM.js";
import "./chunk-H4GTVHVL.js";
import "./chunk-LJ33ZUQ3.js";
import "./chunk-CAHBBZSR.js";
import "./chunk-4IWWMMA3.js";
import "./chunk-BDYPDR3Y.js";
import "./chunk-A2AZM62Y.js";
import {
  d as d2
} from "./chunk-7H3DALFB.js";
import {
  q
} from "./chunk-TULIAEWT.js";
import {
  t as t3
} from "./chunk-N75Y7HEU.js";
import "./chunk-2CS746FZ.js";
import "./chunk-JKIFCUQO.js";
import "./chunk-WWAX5Q53.js";
import "./chunk-BJHD4EAD.js";
import "./chunk-NXY7NRQW.js";
import "./chunk-2BKRWNDZ.js";
import "./chunk-2RL34CVC.js";
import "./chunk-B6C2GOG6.js";
import "./chunk-K3VYMAVM.js";
import {
  R
} from "./chunk-NSIIITDR.js";
import "./chunk-UIO6TUGM.js";
import "./chunk-3Y2NDRJ3.js";
import "./chunk-63MMKYGO.js";
import "./chunk-2OFZKHVN.js";
import "./chunk-FSYN2HHU.js";
import "./chunk-CUMZN5BS.js";
import "./chunk-3CFYBBSV.js";
import {
  h
} from "./chunk-UJ25GG5E.js";
import "./chunk-MWVR4HFA.js";
import "./chunk-ZS6XBZGY.js";
import {
  n as n3
} from "./chunk-FOPBVVXE.js";
import "./chunk-AACFCXAP.js";
import {
  a as a4,
  t
} from "./chunk-F76JJ37N.js";
import {
  l as l3
} from "./chunk-GNI472GU.js";
import "./chunk-WSMONZ65.js";
import "./chunk-ZT7UIVVR.js";
import {
  h as h2
} from "./chunk-3URWFW2B.js";
import "./chunk-YTTBQ62G.js";
import {
  n as n2
} from "./chunk-INI6MHIQ.js";
import "./chunk-5NFV6CXP.js";
import "./chunk-QUZZIDFR.js";
import "./chunk-XNUSHDFN.js";
import "./chunk-2R53FNGL.js";
import "./chunk-KA2INOMU.js";
import "./chunk-CUUDF5R2.js";
import "./chunk-XYME6BO6.js";
import "./chunk-N77BULFI.js";
import "./chunk-NEIJCC5O.js";
import "./chunk-UMUW6RKM.js";
import "./chunk-XRTNDGK2.js";
import "./chunk-XLLV5QUO.js";
import "./chunk-4AKMPOG7.js";
import {
  V as V2
} from "./chunk-YQ5L6J6K.js";
import "./chunk-H6ZVHKNF.js";
import "./chunk-2CJBZZN7.js";
import "./chunk-YAXW2DL6.js";
import {
  r as r2
} from "./chunk-ZT3IR6LI.js";
import "./chunk-RKF6WUZT.js";
import "./chunk-ZBYB4REQ.js";
import "./chunk-YYLIW24Q.js";
import "./chunk-B7BH33JH.js";
import "./chunk-UGTAETXR.js";
import "./chunk-5CXTLD23.js";
import "./chunk-KZ2CHKU3.js";
import {
  p
} from "./chunk-NYEIVTKF.js";
import "./chunk-ZJQPHR3K.js";
import {
  z
} from "./chunk-XK66VICH.js";
import "./chunk-HLST5KGP.js";
import {
  o as o2
} from "./chunk-PDFWMXUS.js";
import {
  f
} from "./chunk-5HCEYXY5.js";
import "./chunk-H6YQECN2.js";
import "./chunk-6JCZVSRM.js";
import "./chunk-LLGOMKTE.js";
import "./chunk-TRJUNZSW.js";
import "./chunk-G3UCNZQL.js";
import "./chunk-P4O4YCLI.js";
import {
  n
} from "./chunk-FV6ZNHFI.js";
import {
  j
} from "./chunk-IBLVGHDR.js";
import "./chunk-MSSQA3XK.js";
import "./chunk-SRNKPAJX.js";
import "./chunk-MOMLPET6.js";
import "./chunk-GYTEHLOC.js";
import {
  m as m2
} from "./chunk-SPNGBO6M.js";
import "./chunk-SDIBXPSJ.js";
import "./chunk-LPCUYJ2B.js";
import "./chunk-67AKDROO.js";
import {
  l
} from "./chunk-JA3AQLAK.js";
import {
  m2 as m
} from "./chunk-GWXO4XME.js";
import {
  a2 as a3,
  s as s2
} from "./chunk-S62CSPIH.js";
import {
  x
} from "./chunk-X26VPODZ.js";
import {
  o
} from "./chunk-XNYPRDKK.js";
import "./chunk-YWPUEUEP.js";
import {
  r
} from "./chunk-Y4BWIIWH.js";
import "./chunk-3QHX4R4B.js";
import "./chunk-TTJIKWMC.js";
import "./chunk-CMEG2CKL.js";
import "./chunk-VHPBXBDE.js";
import "./chunk-6ACTD4UJ.js";
import "./chunk-5REYU5G2.js";
import {
  H
} from "./chunk-SH3CUEMB.js";
import {
  V
} from "./chunk-BMQ3IPHR.js";
import "./chunk-JNYZ3I5R.js";
import {
  a as a2,
  d,
  i as i2
} from "./chunk-N626Y23H.js";
import {
  a,
  i3 as i,
  s2 as s
} from "./chunk-TJPLHZCD.js";
import "./chunk-KLFJ5V5G.js";
import "./chunk-EP7EDY5M.js";

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingSublayer.js
var n5 = class extends n2.IdentifiableMixin(a5) {
  constructor(e3) {
    super(e3), this.title = "", this.id = -1, this.modelName = null, this.isEmpty = null, this.legendEnabled = true, this.visible = true, this.opacity = 1;
  }
  readTitle(e3, o3) {
    return "string" == typeof o3.alias ? o3.alias : "string" == typeof o3.name ? o3.name : "";
  }
  readIdOnlyOnce(e3) {
    return -1 !== this.id ? this.id : "number" == typeof e3 ? e3 : -1;
  }
};
r([m({ type: String, json: { origins: { "web-scene": { write: true }, "portal-item": { write: true } } } })], n5.prototype, "title", void 0), r([o2("service", "title", ["alias", "name"])], n5.prototype, "readTitle", null), r([m()], n5.prototype, "layer", void 0), r([m({ type: x, readOnly: true, json: { read: false, write: { ignoreOrigin: true, isRequired: true } } })], n5.prototype, "id", void 0), r([o2("service", "id")], n5.prototype, "readIdOnlyOnce", null), r([m(c2(String))], n5.prototype, "modelName", void 0), r([m(c2(Boolean))], n5.prototype, "isEmpty", void 0), r([m({ type: Boolean, nonNullable: true })], n5.prototype, "legendEnabled", void 0), r([m({ type: Boolean, json: { name: "visibility", write: true } })], n5.prototype, "visible", void 0), r([m({ type: Number, json: { write: true } })], n5.prototype, "opacity", void 0), n5 = r([a3("esri.layers.buildingSublayers.BuildingSublayer")], n5);

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingComponentSublayer.js
var A = s4();
var _ = class extends p.LoadableMixin(m2.EsriPromiseMixin(n5)) {
  constructor(e3) {
    super(e3), this.type = "building-component", this.nodePages = null, this.materialDefinitions = [], this.textureSetDefinitions = [], this.geometryDefinitions = [], this.indexInfo = null, this.serviceUpdateTimeStamp = null, this.store = null, this.attributeStorageInfo = [], this.fields = [], this.associatedLayer = null, this.outFields = null, this.listMode = "show", this.renderer = null, this.definitionExpression = null, this.popupEnabled = true, this.popupTemplate = null, this.layerType = "3d-object";
  }
  get parsedUrl() {
    return this.layer ? { path: `${this.layer.parsedUrl?.path}/sublayers/${this.id}`, query: this.layer.parsedUrl?.query } : { path: "" };
  }
  get fieldsIndex() {
    return new Z(this.fields);
  }
  readAssociatedLayer(e3, t8) {
    const r4 = this.layer.associatedFeatureServiceItem, o3 = t8.associatedLayerID;
    return null != r4 && "number" == typeof o3 ? new Xe({ portalItem: r4, customParameters: this.customParameters, layerId: o3 }) : null;
  }
  get objectIdField() {
    if (null != this.fields) {
      for (const e3 of this.fields) if ("oid" === e3.type) return e3.name;
    }
    return "";
  }
  get globalIdField() {
    if (null != this.fields) {
      for (const e3 of this.fields) if ("global-id" === e3.type) return e3.name;
    }
    return "";
  }
  get displayField() {
    return null != this.associatedLayer ? this.associatedLayer.displayField : void 0;
  }
  get apiKey() {
    return this.layer.apiKey;
  }
  get customParameters() {
    return this.layer.customParameters;
  }
  get fullExtent() {
    return this.layer.fullExtent;
  }
  get spatialReference() {
    return this.layer.spatialReference;
  }
  get version() {
    return this.layer.version;
  }
  get elevationInfo() {
    return this.layer.elevationInfo;
  }
  get minScale() {
    return this.layer.minScale;
  }
  get maxScale() {
    return this.layer.maxScale;
  }
  get effectiveScaleRange() {
    return this.layer.effectiveScaleRange;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  load(e3) {
    const t8 = null != e3 ? e3.signal : null, r4 = this._fetchService(t8).then((() => {
      this.indexInfo = r3(this.parsedUrl.path, this.rootNode, this.nodePages, this.customParameters, this.apiKey, i.getLogger(this), t8);
    }));
    return this.addResolvingPromise(r4), Promise.resolve(this);
  }
  createPopupTemplate(e3) {
    return p2(this, e3);
  }
  async _fetchService(e3) {
    const t8 = (await H(this.parsedUrl.path, { query: { f: "json", ...this.customParameters, token: this.apiKey }, responseType: "json", signal: e3 })).data;
    this.read(t8, { origin: "service", url: this.parsedUrl });
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  getFieldDomain(e3, t8) {
    const r4 = this.getField(e3)?.domain ?? null;
    return this.associatedLayer ? N(this.associatedLayer, e3, t8, r4) : r4;
  }
  getFeatureType(e3) {
    return e3 && null != this.associatedLayer ? this.associatedLayer.getFeatureType(e3) : null;
  }
  get types() {
    return null != this.associatedLayer ? this.associatedLayer.types ?? [] : [];
  }
  get typeIdField() {
    return null != this.associatedLayer ? this.associatedLayer.typeIdField : null;
  }
  get geometryType() {
    return "3d-object" === this.layerType ? "mesh" : "point";
  }
  get profile() {
    return "3d-object" === this.layerType ? "mesh-pyramids" : "points";
  }
  get capabilities() {
    const e3 = null != this.associatedLayer && this.associatedLayer.capabilities ? this.associatedLayer.capabilities : t4, { query: t8, operations: { supportsQuery: r4 }, data: { supportsZ: o3, supportsM: s5, isVersioned: i7 } } = e3;
    return { query: t8, operations: { supportsQuery: r4 }, data: { supportsZ: o3, supportsM: s5, isVersioned: i7 } };
  }
  createQuery() {
    const e3 = new R();
    return "mesh" !== this.geometryType && (e3.returnGeometry = true, e3.returnZ = true), e3.where = this.definitionExpression || "1=1", e3.sqlFormat = "standard", e3;
  }
  queryExtent(e3, t8) {
    return this._getAssociatedLayerForQuery().then(((r4) => r4.queryExtent(e3 || this.createQuery(), t8)));
  }
  queryFeatureCount(e3, t8) {
    return this._getAssociatedLayerForQuery().then(((r4) => r4.queryFeatureCount(e3 || this.createQuery(), t8)));
  }
  queryFeatures(e3, t8) {
    return this._getAssociatedLayerForQuery().then(((r4) => r4.queryFeatures(e3 || this.createQuery(), t8))).then(((e4) => {
      if (e4?.features) for (const t9 of e4.features) t9.layer = this.layer, t9.sourceLayer = this;
      return e4;
    }));
  }
  async queryObjectIds(e3, t8) {
    const r4 = await this._getAssociatedLayerForQuery();
    return (await r4.queryObjectIds(e3 || this.createQuery(), t8)).filter(n3);
  }
  async queryCachedAttributes(e3, t8) {
    const r4 = h(this.fieldsIndex, await n4(this, p4(this)));
    return B(this.parsedUrl.path, this.attributeStorageInfo, e3, t8, r4, this.apiKey, this.customParameters);
  }
  async queryCachedFeature(e3, r4) {
    const o3 = await this.queryCachedAttributes(e3, [r4]);
    if (!o3 || 0 === o3.length) throw new s("scenelayer:feature-not-in-cached-data", "Feature not found in cached data");
    return new d2({ attributes: o3[0], layer: this, sourceLayer: this });
  }
  getFieldUsageInfo(e3) {
    return this.fieldsIndex.has(e3) ? { supportsLabelingInfo: false, supportsRenderer: false, supportsPopupTemplate: false, supportsLayerQuery: false } : { supportsLabelingInfo: false, supportsRenderer: true, supportsPopupTemplate: true, supportsLayerQuery: null != this.associatedLayer };
  }
  _getAssociatedLayerForQuery() {
    const e3 = this.associatedLayer;
    return null != e3 && e3.loaded ? Promise.resolve(e3) : this._loadAssociatedLayerForQuery();
  }
  async _loadAssociatedLayerForQuery() {
    if (await this.load(), null == this.associatedLayer) throw new s("buildingscenelayer:query-not-available", "BuildingSceneLayer component layer queries are not available without an associated feature layer", { layer: this });
    try {
      await this.associatedLayer.load();
    } catch (e3) {
      throw new s("buildingscenelayer:query-not-available", "BuildingSceneLayer associated feature layer could not be loaded", { layer: this, error: e3 });
    }
    return this.associatedLayer;
  }
};
r([m({ readOnly: true })], _.prototype, "parsedUrl", null), r([m({ type: p3, readOnly: true })], _.prototype, "nodePages", void 0), r([m({ type: [a6], readOnly: true })], _.prototype, "materialDefinitions", void 0), r([m({ type: [y], readOnly: true })], _.prototype, "textureSetDefinitions", void 0), r([m({ type: [m4], readOnly: true })], _.prototype, "geometryDefinitions", void 0), r([m({ readOnly: true })], _.prototype, "serviceUpdateTimeStamp", void 0), r([m({ readOnly: true })], _.prototype, "store", void 0), r([m({ type: String, readOnly: true, json: { read: { source: "store.rootNode" } } })], _.prototype, "rootNode", void 0), r([m({ readOnly: true })], _.prototype, "attributeStorageInfo", void 0), r([m(A.fields)], _.prototype, "fields", void 0), r([m({ readOnly: true })], _.prototype, "fieldsIndex", null), r([m({ readOnly: true, type: Xe })], _.prototype, "associatedLayer", void 0), r([o2("service", "associatedLayer", ["associatedLayerID"])], _.prototype, "readAssociatedLayer", null), r([m(A.outFields)], _.prototype, "outFields", void 0), r([m({ type: String, readOnly: true })], _.prototype, "objectIdField", null), r([m({ type: String, readOnly: true })], _.prototype, "globalIdField", null), r([m({ readOnly: true, type: String, json: { read: false } })], _.prototype, "displayField", null), r([m({ readOnly: true, type: String })], _.prototype, "apiKey", null), r([m({ readOnly: true, type: String })], _.prototype, "customParameters", null), r([m({ readOnly: true, type: z })], _.prototype, "fullExtent", null), r([m({ readOnly: true, type: f })], _.prototype, "spatialReference", null), r([m({ readOnly: true })], _.prototype, "version", null), r([m({ readOnly: true, type: c })], _.prototype, "elevationInfo", null), r([m({ readOnly: true, type: Number })], _.prototype, "minScale", null), r([m({ readOnly: true, type: Number })], _.prototype, "maxScale", null), r([m({ readOnly: true, type: Number })], _.prototype, "effectiveScaleRange", null), r([m({ type: ["hide", "show"], json: { write: true } })], _.prototype, "listMode", void 0), r([m({ types: u, json: { origins: { service: { read: { source: "drawingInfo.renderer" } } }, name: "layerDefinition.drawingInfo.renderer", write: true }, value: null })], _.prototype, "renderer", void 0), r([m({ type: String, json: { origins: { service: { read: false, write: false } }, name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], _.prototype, "definitionExpression", void 0), r([m(l4)], _.prototype, "popupEnabled", void 0), r([m({ type: q, json: { read: { source: "popupInfo" }, write: { target: "popupInfo" } } })], _.prototype, "popupTemplate", void 0), r([m({ readOnly: true, type: String, json: { origins: { service: { read: { source: "store.normalReferenceFrame" } } }, read: false } })], _.prototype, "normalReferenceFrame", void 0), r([m({ readOnly: true, json: { read: false } })], _.prototype, "defaultPopupTemplate", null), r([m()], _.prototype, "types", null), r([m()], _.prototype, "typeIdField", null), r([m({ json: { write: false } }), r2(new o({ "3DObject": "3d-object", Point: "point" }))], _.prototype, "layerType", void 0), r([m()], _.prototype, "geometryType", null), r([m()], _.prototype, "profile", null), r([m({ readOnly: true, json: { read: false } })], _.prototype, "capabilities", null), r([m({ readOnly: true })], _.prototype, "statisticsInfo", void 0), _ = r([a3("esri.layers.buildingSublayers.BuildingComponentSublayer")], _);
var C = _;

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingGroupSublayer.js
var a7;
var l5 = { type: V2, readOnly: true, json: { origins: { service: { read: { source: "sublayers", reader: p5 } } }, read: false } };
function p5(r4, o3, t8) {
  if (r4 && Array.isArray(r4)) return new V2(r4.map(((r5) => {
    const e3 = y2(r5);
    if (e3) {
      const o4 = new e3();
      return o4.read(r5, t8), o4;
    }
    return t8?.messages && r5 && t8.messages.push(new s2("building-scene-layer:unsupported-sublayer-type", "Building scene sublayer of type '" + (r5.type || "unknown") + "' are not supported", { definition: r5, context: t8 })), null;
  })));
}
var c3 = a7 = class extends n5 {
  constructor(r4) {
    super(r4), this.type = "building-group", this.listMode = "show", this.sublayers = null;
  }
  loadAll() {
    return a4(this, ((r4) => a7.forEachSublayer(this.sublayers, ((e3) => {
      "building-group" !== e3.type && r4(e3);
    }))));
  }
};
function y2(r4) {
  return "group" === r4.layerType ? c3 : C;
}
r([m({ type: ["hide", "show", "hide-children"], json: { write: true } })], c3.prototype, "listMode", void 0), r([m(l5)], c3.prototype, "sublayers", void 0), c3 = a7 = r([a3("esri.layers.buildingSublayers.BuildingGroupSublayer")], c3), (function(r4) {
  function e3(r5, o3) {
    r5.forEach(((r6) => {
      o3(r6), "building-group" === r6.type && e3(r6.sublayers, o3);
    }));
  }
  r4.sublayersProperty = l5, r4.readSublayers = p5, r4.forEachSublayer = e3;
})(c3 || (c3 = {}));

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfo.js
var e2 = class extends l {
  constructor() {
    super(...arguments), this.type = null;
  }
};
r([m({ type: String, readOnly: true, json: { write: { isRequired: true } } })], e2.prototype, "type", void 0), e2 = r([a3("esri.layers.support.BuildingFilterAuthoringInfo")], e2);
var p6 = e2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoType.js
var i4;
var p7 = i4 = class extends l {
  constructor() {
    super(...arguments), this.filterType = null, this.filterValues = null;
  }
  clone() {
    return new i4({ filterType: this.filterType, filterValues: a(this.filterValues) });
  }
};
r([m({ type: String, json: { write: { isRequired: true } } })], p7.prototype, "filterType", void 0), r([m({ type: [String], json: { write: { isRequired: true } } })], p7.prototype, "filterValues", void 0), p7 = i4 = r([a3("esri.layers.support.BuildingFilterAuthoringInfoType")], p7);
var l6 = p7;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoBlock.js
var c4;
var l7 = V2.ofType(l6);
var m5 = c4 = class extends l {
  clone() {
    return new c4({ filterTypes: a(this.filterTypes) });
  }
};
r([m({ type: l7, json: { write: { isRequired: true } } })], m5.prototype, "filterTypes", void 0), m5 = c4 = r([a3("esri.layers.support.BuildingFilterAuthoringInfoBlock")], m5);
var n6 = m5;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoCheckbox.js
var p8;
var l8 = V2.ofType(n6);
var n7 = p8 = class extends p6 {
  constructor() {
    super(...arguments), this.type = "checkbox";
  }
  clone() {
    return new p8({ filterBlocks: a(this.filterBlocks) });
  }
};
r([m({ type: ["checkbox"] })], n7.prototype, "type", void 0), r([m({ type: l8, json: { write: { isRequired: true } } })], n7.prototype, "filterBlocks", void 0), n7 = p8 = r([a3("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")], n7);
var m6 = n7;

// node_modules/@arcgis/core/layers/support/BuildingFilterMode.js
var t5 = class extends l {
};
r([m({ readOnly: true, json: { read: false, write: { isRequired: true } } })], t5.prototype, "type", void 0), t5 = r([a3("esri.layers.support.BuildingFilterMode")], t5);
var p9 = t5;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeSolid.js
var t6;
var i5 = t6 = class extends p9 {
  constructor() {
    super(...arguments), this.type = "solid";
  }
  clone() {
    return new t6();
  }
};
r([m({ type: ["solid"], readOnly: true, json: { write: { isRequired: true } } })], i5.prototype, "type", void 0), i5 = t6 = r([a3("esri.layers.support.BuildingFilterModeSolid")], i5);
var p10 = i5;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeWireFrame.js
var c5;
var m7 = c5 = class extends p9 {
  constructor() {
    super(...arguments), this.type = "wire-frame", this.edges = null;
  }
  clone() {
    return new c5({ edges: a(this.edges) });
  }
};
r([r2({ wireFrame: "wire-frame" })], m7.prototype, "type", void 0), r([m(t3)], m7.prototype, "edges", void 0), m7 = c5 = r([a3("esri.layers.support.BuildingFilterModeWireFrame")], m7);
var a8 = m7;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeXRay.js
var t7;
var p11 = t7 = class extends p9 {
  constructor() {
    super(...arguments), this.type = "x-ray";
  }
  clone() {
    return new t7();
  }
};
r([m({ type: ["x-ray"], readOnly: true, json: { write: { isRequired: true } } })], p11.prototype, "type", void 0), p11 = t7 = r([a3("esri.layers.support.BuildingFilterModeXRay")], p11);
var i6 = p11;

// node_modules/@arcgis/core/layers/support/BuildingFilterBlock.js
var d4;
var a9 = { nonNullable: true, types: { key: "type", base: p9, typeMap: { solid: p10, "wire-frame": a8, "x-ray": i6 } }, json: { read: (e3) => {
  switch (e3?.type) {
    case "solid":
      return p10.fromJSON(e3);
    case "wireFrame":
      return a8.fromJSON(e3);
    case "x-ray":
      return i6.fromJSON(e3);
    default:
      return;
  }
}, write: { enabled: true, isRequired: true } } };
var m8 = d4 = class extends l {
  constructor() {
    super(...arguments), this.filterExpression = null, this.filterMode = new p10(), this.title = "";
  }
  clone() {
    return new d4({ filterExpression: this.filterExpression, filterMode: a(this.filterMode), title: this.title });
  }
};
r([m({ type: String, json: { write: { enabled: true, isRequired: true } } })], m8.prototype, "filterExpression", void 0), r([m(a9)], m8.prototype, "filterMode", void 0), r([m({ type: String, json: { write: { enabled: true, isRequired: true } } })], m8.prototype, "title", void 0), m8 = d4 = r([a3("esri.layers.support.BuildingFilterBlock")], m8);
var c6 = m8;

// node_modules/@arcgis/core/layers/support/BuildingFilter.js
var d5;
var u2 = V2.ofType(c6);
var m9 = d5 = class extends l {
  constructor() {
    super(...arguments), this.description = null, this.filterBlocks = null, this.id = n(), this.name = null;
  }
  clone() {
    return new d5({ description: this.description, filterBlocks: a(this.filterBlocks), id: this.id, name: this.name, filterAuthoringInfo: a(this.filterAuthoringInfo) });
  }
};
r([m({ type: String, json: { write: true } })], m9.prototype, "description", void 0), r([m({ type: u2, json: { write: { enabled: true, isRequired: true } } })], m9.prototype, "filterBlocks", void 0), r([m({ types: { key: "type", base: p6, typeMap: { checkbox: m6 } }, json: { read: (o3) => "checkbox" === o3?.type ? m6.fromJSON(o3) : null, write: true } })], m9.prototype, "filterAuthoringInfo", void 0), r([m({ type: String, constructOnly: true, json: { write: { enabled: true, isRequired: true } } })], m9.prototype, "id", void 0), r([m({ type: String, json: { write: { enabled: true, isRequired: true } } })], m9.prototype, "name", void 0), m9 = d5 = r([a3("esri.layers.support.BuildingFilter")], m9);

// node_modules/@arcgis/core/layers/support/BuildingSummaryStatistics.js
var p12 = class extends l {
  constructor() {
    super(...arguments), this.fieldName = null, this.modelName = null, this.label = null, this.min = null, this.max = null, this.mostFrequentValues = null, this.subLayerIds = null;
  }
};
r([m({ type: String })], p12.prototype, "fieldName", void 0), r([m({ type: String })], p12.prototype, "modelName", void 0), r([m({ type: String })], p12.prototype, "label", void 0), r([m({ type: Number })], p12.prototype, "min", void 0), r([m({ type: Number })], p12.prototype, "max", void 0), r([m({ json: { read: (t8) => Array.isArray(t8) && (t8.every(((t9) => "string" == typeof t9)) || t8.every(((t9) => "number" == typeof t9))) ? t8.slice() : null } })], p12.prototype, "mostFrequentValues", void 0), r([m({ type: [Number] })], p12.prototype, "subLayerIds", void 0), p12 = r([a3("esri.layers.support.BuildingSummaryStatistics.BuildingFieldStatistics")], p12);
var n8 = class extends p.LoadableMixin(m2.EsriPromiseMixin(l)) {
  constructor(t8) {
    super(t8), this.url = null, this.customParameters = null;
  }
  get fields() {
    return this.loaded || "loading" === this.loadStatus ? this._get("fields") : (i.getLogger(this).error("building summary statistics are not loaded"), null);
  }
  load(t8) {
    const e3 = null != t8 ? t8.signal : null;
    return this.addResolvingPromise(this._fetchService(e3)), Promise.resolve(this);
  }
  async _fetchService(t8) {
    const r4 = (await H(this.url, { query: { f: "json", ...this.customParameters, token: this.apiKey }, responseType: "json", signal: t8 })).data;
    this.read(r4, { origin: "service" });
  }
};
r([m({ constructOnly: true, type: String })], n8.prototype, "url", void 0), r([m({ constructOnly: true })], n8.prototype, "customParameters", void 0), r([m({ constructOnly: true })], n8.prototype, "apiKey", void 0), r([m({ readOnly: true, type: [p12], json: { read: { source: "summary" } } })], n8.prototype, "fields", null), n8 = r([a3("esri.layers.support.BuildingSummaryStatistics")], n8);

// node_modules/@arcgis/core/layers/BuildingSceneLayer.js
var R3 = V2.ofType(m9);
var M = a(c3.sublayersProperty);
var k = M.json?.origins;
k && (k["web-scene"] = { type: [C], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } }, k["portal-item"] = { type: [C], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } });
var H2 = class extends R2(l2(b(j2(t2(S(e(i3(h2)))))))) {
  constructor(e3) {
    super(e3), this.operationalLayerType = "BuildingSceneLayer", this.allSublayers = new l3({ getCollections: () => [this.sublayers], getChildrenFunction: (e4) => "building-group" === e4.type ? e4.sublayers : null }), this.sublayers = null, this._allSublayerOverrides = null, this.filters = new R3(), this.activeFilterId = null, this.summaryStatistics = null, this.outFields = null, this.legendEnabled = true, this.type = "building-scene";
  }
  normalizeCtorArgs(e3) {
    return "string" == typeof e3 ? { url: e3 } : e3 ?? {};
  }
  destroy() {
    this.allSublayers.destroy();
  }
  readSublayers(e3, r4, t8) {
    const i7 = c3.readSublayers(e3, r4, t8);
    return c3.forEachSublayer(i7, ((e4) => e4.layer = this)), this._allSublayerOverrides && (N2(i7, this._allSublayerOverrides), this._allSublayerOverrides = null), i7;
  }
  write(e3, r4) {
    return e3 = super.write(e3, r4), !r4 || "web-scene" !== r4.origin && "portal-item" !== r4.origin || (this.sublayers ? W(this.sublayers, e3, r4) : this._allSublayerOverrides && z2(this._allSublayerOverrides, e3, r4)), e3;
  }
  read(e3, r4) {
    if (super.read(e3, r4), ("web-scene" === r4?.origin || "portal-item" === r4?.origin) && Array.isArray(e3?.sublayers)) {
      const t8 = V4(e3.sublayers, r4);
      this.sublayers ? G(this.sublayers, t8) : (this._allSublayerOverrides ??= /* @__PURE__ */ new Map(), this._allSublayerOverrides.set(r4.origin, t8));
    }
  }
  readSummaryStatistics(e3, r4) {
    if ("string" == typeof r4.statisticsHRef && this.parsedUrl) {
      const e4 = V(this.parsedUrl.path, r4.statisticsHRef);
      return new n8({ url: e4, apiKey: this.apiKey, customParameters: this.customParameters });
    }
    return null;
  }
  set elevationInfo(e3) {
    null != e3 && "absolute-height" !== e3.mode || this._set("elevationInfo", e3), this._validateElevationInfo(e3);
  }
  load(e3) {
    const r4 = null != e3 ? e3.signal : null, t8 = this.loadFromPortal({ supportedTypes: ["Scene Service"] }, e3).catch(a2).then((() => this._fetchService(r4))).then((() => this._fetchAssociatedFeatureService(r4)));
    return this.addResolvingPromise(t8), Promise.resolve(this);
  }
  loadAll() {
    return t(this, ((e3) => {
      c3.forEachSublayer(this.sublayers, ((r4) => {
        "building-group" !== r4.type && e3(r4);
      })), this.summaryStatistics && e3(this.summaryStatistics);
    }));
  }
  async saveAs(e3, r4) {
    return this._debouncedSaveOperations(V3.SAVE_AS, { ...r4, getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" }, e3);
  }
  async save() {
    const e3 = { getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" };
    return this._debouncedSaveOperations(V3.SAVE, e3);
  }
  validateLayer(e3) {
    if (!e3.layerType || "Building" !== e3.layerType) throw new s("buildingscenelayer:layer-type-not-supported", "BuildingSceneLayer does not support this layer type", { layerType: e3.layerType });
  }
  _getTypeKeywords() {
    return ["Building"];
  }
  async _fetchAssociatedFeatureService(e3) {
    try {
      const { portalItem: r4 } = await s3(`${this.url}/layers/${this.layerId}`, { sceneLayerItem: this.portalItem, customParameters: this.customParameters, apiKey: this.apiKey, signal: e3 });
      this.associatedFeatureServiceItem = r4;
    } catch (r4) {
      d(this._logWarningOnPopupEnabled());
    }
  }
  async _logWarningOnPopupEnabled() {
    const e3 = new AbortController();
    this.addHandles(i2(e3)), await j((() => this.allSublayers.filter(((e4) => "building-component" === e4.type)).some(((e4) => e4.popupEnabled && null != e4.popupTemplate))), e3.signal);
    const r4 = this.allSublayers.filter(((e4) => "building-component" === e4.type)).filter(((e4) => e4.popupEnabled && null != e4.popupTemplate)), t8 = [], i7 = [];
    for (const s5 of r4) {
      const e4 = s5.title ?? `untitled ${s5.id}`;
      s5.attributeStorageInfo ? t8.push(e4) : i7.push(e4);
    }
    const o3 = "\n  ", a10 = t8.length > 0 ? `
The following sublayers will fall back to binary attributes for Popups:${o3}${t8.join(o3)}` : "", n9 = i7.length > 0 ? `
The following sublayers have no binary attributes and will not work with Popups:${o3}${i7.join(o3)}` : "";
    i.getLogger(this).warn(`Associated FeatureLayer could not be loaded for this BuildingSceneLayer: ${this.title}.`, a10, n9);
  }
  _validateElevationInfo(e3) {
    const r4 = "Building scene layers";
    $(i.getLogger(this), Z2(r4, "absolute-height", e3)), $(i.getLogger(this), w(r4, e3));
  }
};
function N2(e3, r4) {
  r4.forEach(((r5) => G(e3, r5)));
}
function G(e3, r4) {
  const { overrides: t8, context: i7 } = r4;
  c3.forEachSublayer(e3, ((e4) => e4.read(t8.get(e4.id), i7)));
}
function V4(e3, r4) {
  const t8 = /* @__PURE__ */ new Map();
  for (const s5 of e3) null != s5 && "object" == typeof s5 && "number" == typeof s5.id ? t8.set(s5.id, s5) : r4.messages?.push(new s("building-scene-layer:invalid-sublayer-override", "Invalid value for sublayer override. Not an object or no id specified.", { value: s5 }));
  return { overrides: t8, context: r4 };
}
function W(e3, r4, t8) {
  const i7 = [];
  c3.forEachSublayer(e3, ((e4) => {
    const r5 = e4.write({}, t8);
    Object.keys(r5).length > 1 && i7.push(r5);
  })), i7.length > 0 && (r4.sublayers = i7);
}
function z2(e3, r4, t8) {
  const i7 = t8?.origin && e3.get(t8.origin);
  i7 && (r4.sublayers = [], i7.overrides.forEach(((e4) => {
    r4.sublayers.push(a(e4));
  })));
}
r([m({ type: ["BuildingSceneLayer"] })], H2.prototype, "operationalLayerType", void 0), r([m({ readOnly: true })], H2.prototype, "allSublayers", void 0), r([m(M)], H2.prototype, "sublayers", void 0), r([o2("service", "sublayers")], H2.prototype, "readSublayers", null), r([m({ type: R3, nonNullable: true, json: { write: true } })], H2.prototype, "filters", void 0), r([m({ type: String, json: { write: true } })], H2.prototype, "activeFilterId", void 0), r([m({ readOnly: true, type: n8 })], H2.prototype, "summaryStatistics", void 0), r([o2("summaryStatistics", ["statisticsHRef"])], H2.prototype, "readSummaryStatistics", null), r([m({ type: [String], json: { read: false } })], H2.prototype, "outFields", void 0), r([m(g)], H2.prototype, "fullExtent", void 0), r([m(d3)], H2.prototype, "legendEnabled", void 0), r([m({ type: ["show", "hide", "hide-children"] })], H2.prototype, "listMode", void 0), r([m(c2(f))], H2.prototype, "spatialReference", void 0), r([m(m3)], H2.prototype, "elevationInfo", null), r([m({ json: { read: false }, readOnly: true })], H2.prototype, "type", void 0), r([m()], H2.prototype, "associatedFeatureServiceItem", void 0), H2 = r([a3("esri.layers.BuildingSceneLayer")], H2);
var J = H2;
export {
  J as default
};
//# sourceMappingURL=BuildingSceneLayer-K4AAEJKY.js.map
