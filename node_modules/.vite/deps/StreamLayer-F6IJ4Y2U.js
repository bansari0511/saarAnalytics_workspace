import {
  e as e2
} from "./chunk-K6CAHOYR.js";
import {
  d
} from "./chunk-6PSWWIGY.js";
import "./chunk-X54A5S3J.js";
import {
  A as A2
} from "./chunk-BZSAIP56.js";
import {
  o as o2
} from "./chunk-IQFA7YIN.js";
import {
  c
} from "./chunk-AZW6GDWJ.js";
import "./chunk-MFXX2MV4.js";
import "./chunk-O6RGVUWL.js";
import {
  a as a5
} from "./chunk-G2YKZHYQ.js";
import {
  s as s2
} from "./chunk-FGPKHX4G.js";
import {
  l as l2
} from "./chunk-FI7A2I5K.js";
import "./chunk-GBOUNRWE.js";
import {
  A,
  l as l3
} from "./chunk-7SLD6UJQ.js";
import {
  e
} from "./chunk-FBQHQDLT.js";
import {
  c as c2
} from "./chunk-CCSAZNG5.js";
import "./chunk-7QI7J4JB.js";
import {
  p as p2
} from "./chunk-TDFQY4TL.js";
import {
  f as f2
} from "./chunk-BPVOXAWI.js";
import {
  p
} from "./chunk-K54LZFQX.js";
import "./chunk-URBRKEAB.js";
import "./chunk-FT4FDH6N.js";
import {
  t as t2
} from "./chunk-XGN6BPAP.js";
import {
  b2 as b,
  d as d2,
  j as j2,
  l as l4,
  p as p3,
  s as s3,
  v,
  y as y2
} from "./chunk-FAYGOXZ3.js";
import "./chunk-SIRTOV2N.js";
import {
  m as m3,
  u
} from "./chunk-7VD3IPFA.js";
import "./chunk-KFLBCUTX.js";
import {
  j
} from "./chunk-TYGU3EXP.js";
import {
  S
} from "./chunk-ZQUEN26P.js";
import {
  _
} from "./chunk-WGJD7U4H.js";
import "./chunk-PNZTL5C4.js";
import "./chunk-EU5HNJUP.js";
import "./chunk-TNGT5LD3.js";
import {
  te
} from "./chunk-QVVUEHRT.js";
import "./chunk-5H6DUUYZ.js";
import "./chunk-NBK7CQDR.js";
import "./chunk-4COYKAT6.js";
import "./chunk-4PMAEDAD.js";
import "./chunk-SM6D23CI.js";
import "./chunk-CKXK33BB.js";
import "./chunk-7BL5FEWJ.js";
import "./chunk-OAEHASLX.js";
import "./chunk-7QAQW3R4.js";
import "./chunk-XSLTJTXI.js";
import "./chunk-KFNWBWN4.js";
import "./chunk-K55CXVYD.js";
import {
  t as t3
} from "./chunk-EEG2HGFZ.js";
import "./chunk-KCEUIRTN.js";
import "./chunk-CIYAWLSD.js";
import "./chunk-GDJLDPJ6.js";
import "./chunk-SE3G7TVO.js";
import "./chunk-ZWFRZAOO.js";
import "./chunk-ZLQRJCGG.js";
import {
  c as c3
} from "./chunk-WMN22ENS.js";
import "./chunk-UZ3YWBWC.js";
import "./chunk-2EOHKZLO.js";
import "./chunk-S7GLMIAQ.js";
import "./chunk-T7S34Q47.js";
import "./chunk-AZ6KC3UF.js";
import "./chunk-UICDKBDP.js";
import "./chunk-3M6ALZOH.js";
import "./chunk-QPV4BKBC.js";
import "./chunk-LQQCPLIT.js";
import "./chunk-4O46EK5T.js";
import "./chunk-GQBGK7RW.js";
import "./chunk-EMULKSUV.js";
import "./chunk-AY3JR4QM.js";
import "./chunk-A2AZM62Y.js";
import "./chunk-7H3DALFB.js";
import {
  q
} from "./chunk-TULIAEWT.js";
import "./chunk-N75Y7HEU.js";
import "./chunk-2CS746FZ.js";
import "./chunk-JKIFCUQO.js";
import "./chunk-WWAX5Q53.js";
import "./chunk-BJHD4EAD.js";
import "./chunk-NXY7NRQW.js";
import "./chunk-2BKRWNDZ.js";
import {
  R
} from "./chunk-NSIIITDR.js";
import "./chunk-UIO6TUGM.js";
import "./chunk-3Y2NDRJ3.js";
import {
  m as m2
} from "./chunk-63MMKYGO.js";
import {
  y
} from "./chunk-2OFZKHVN.js";
import "./chunk-FSYN2HHU.js";
import "./chunk-CUMZN5BS.js";
import "./chunk-3CFYBBSV.js";
import {
  I,
  g
} from "./chunk-UJ25GG5E.js";
import "./chunk-MWVR4HFA.js";
import "./chunk-ZS6XBZGY.js";
import "./chunk-FOPBVVXE.js";
import "./chunk-ZT7UIVVR.js";
import {
  h
} from "./chunk-3URWFW2B.js";
import "./chunk-YTTBQ62G.js";
import "./chunk-INI6MHIQ.js";
import "./chunk-5NFV6CXP.js";
import "./chunk-QUZZIDFR.js";
import "./chunk-XNUSHDFN.js";
import "./chunk-2R53FNGL.js";
import "./chunk-KA2INOMU.js";
import {
  a as a4
} from "./chunk-CUUDF5R2.js";
import "./chunk-XYME6BO6.js";
import "./chunk-N77BULFI.js";
import "./chunk-NEIJCC5O.js";
import "./chunk-UMUW6RKM.js";
import "./chunk-XRTNDGK2.js";
import "./chunk-XLLV5QUO.js";
import "./chunk-4AKMPOG7.js";
import "./chunk-YQ5L6J6K.js";
import "./chunk-H6ZVHKNF.js";
import "./chunk-2CJBZZN7.js";
import "./chunk-YAXW2DL6.js";
import "./chunk-ZT3IR6LI.js";
import "./chunk-RKF6WUZT.js";
import "./chunk-ZBYB4REQ.js";
import "./chunk-YYLIW24Q.js";
import "./chunk-B7BH33JH.js";
import "./chunk-UGTAETXR.js";
import "./chunk-5CXTLD23.js";
import "./chunk-KZ2CHKU3.js";
import "./chunk-NYEIVTKF.js";
import "./chunk-ZJQPHR3K.js";
import {
  z
} from "./chunk-XK66VICH.js";
import "./chunk-HLST5KGP.js";
import {
  o
} from "./chunk-PDFWMXUS.js";
import {
  f
} from "./chunk-5HCEYXY5.js";
import "./chunk-H6YQECN2.js";
import "./chunk-6JCZVSRM.js";
import "./chunk-LLGOMKTE.js";
import "./chunk-TRJUNZSW.js";
import "./chunk-FV6ZNHFI.js";
import "./chunk-IBLVGHDR.js";
import "./chunk-SRNKPAJX.js";
import "./chunk-MOMLPET6.js";
import "./chunk-GYTEHLOC.js";
import "./chunk-SPNGBO6M.js";
import "./chunk-SDIBXPSJ.js";
import "./chunk-LPCUYJ2B.js";
import "./chunk-67AKDROO.js";
import {
  l
} from "./chunk-JA3AQLAK.js";
import {
  m2 as m
} from "./chunk-GWXO4XME.js";
import {
  a2 as a3
} from "./chunk-S62CSPIH.js";
import {
  x
} from "./chunk-X26VPODZ.js";
import "./chunk-XNYPRDKK.js";
import "./chunk-YWPUEUEP.js";
import {
  r
} from "./chunk-Y4BWIIWH.js";
import "./chunk-3QHX4R4B.js";
import "./chunk-TTJIKWMC.js";
import "./chunk-CMEG2CKL.js";
import "./chunk-VHPBXBDE.js";
import "./chunk-6ACTD4UJ.js";
import "./chunk-5REYU5G2.js";
import {
  H
} from "./chunk-SH3CUEMB.js";
import "./chunk-BMQ3IPHR.js";
import "./chunk-JNYZ3I5R.js";
import {
  a as a2,
  k,
  t
} from "./chunk-N626Y23H.js";
import {
  a,
  i3 as i,
  s2 as s
} from "./chunk-TJPLHZCD.js";
import "./chunk-KLFJ5V5G.js";
import "./chunk-EP7EDY5M.js";

// node_modules/@arcgis/core/layers/support/PurgeOptions.js
var r2;
var _a;
var i2 = (_a = class extends l {
  constructor() {
    super(...arguments), this.age = null, this.ageReceived = null, this.displayCount = null, this.maxObservations = 1;
  }
  clone() {
    return new r2({ age: this.age, ageReceived: this.ageReceived, displayCount: this.displayCount, maxObservations: this.maxObservations });
  }
}, r2 = _a, _a);
r([m({ type: Number, json: { write: true } })], i2.prototype, "age", void 0), r([m({ type: Number, json: { write: true } })], i2.prototype, "ageReceived", void 0), r([m({ type: Number, json: { write: true } })], i2.prototype, "displayCount", void 0), r([m({ type: Number, json: { write: true } })], i2.prototype, "maxObservations", void 0), i2 = r2 = r([a3("esri.layers.support.PurgeOptions")], i2);

// node_modules/@arcgis/core/layers/StreamLayer.js
var te2 = s2();
function re(e3, t4) {
  return new s("layer:unsupported", `Layer (${e3.title}, ${e3.id}) of type '${e3.declaredClass}' ${t4}`, { layer: e3 });
}
var ie = class extends a5(d(c(p(c2(e2(t2(f2(l2(b(j(S(e(a4.ClonableMixin(h)))))))))))))) {
  constructor(...e3) {
    super(...e3), this.copyright = null, this.definitionExpression = null, this.displayField = null, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.geometryDefinition = null, this.geometryType = null, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.maxReconnectionAttempts = 0, this.maxReconnectionInterval = 20, this.maxScale = 0, this.minScale = 0, this.objectIdField = null, this.operationalLayerType = "ArcGISStreamLayer", this.outFields = ["*"], this.popupEnabled = true, this.popupTemplate = null, this.purgeOptions = new i2(), this.refreshInterval = 0, this.screenSizePerspectiveEnabled = true, this.sourceJSON = null, this.spatialReference = f.WGS84, this.type = "stream", this.url = null, this.updateInterval = 300, this.useViewTime = true, this.webSocketUrl = null, this._debouncedSaveOperations = k((async (e4, t4, r3) => {
      const { save: i3, saveAs: o3 } = await import("./streamLayerUtils-NDWFRIIC.js");
      switch (e4) {
        case A2.SAVE:
          return i3(this, t4);
        case A2.SAVE_AS:
          return o3(this, r3, t4);
      }
    }));
  }
  normalizeCtorArgs(e3, t4) {
    return "string" == typeof e3 ? { url: e3, ...t4 } : e3;
  }
  load(e3) {
    if (!("WebSocket" in globalThis)) return this.addResolvingPromise(Promise.reject(new s("stream-layer:websocket-unsupported", "WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))), Promise.resolve(this);
    const t4 = null != e3 ? e3.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Stream Service", "Feed"] }, e3).catch(a2).then((() => this._fetchService(t4)))), Promise.resolve(this);
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set featureReduction(e3) {
    const t4 = this._normalizeFeatureReduction(e3);
    this._set("featureReduction", t4);
  }
  set renderer(e3) {
    g(e3, this.fieldsIndex), this._set("renderer", e3);
  }
  readRenderer(e3, t4, r3) {
    t4 = t4.layerDefinition || t4;
    const i3 = t4.drawingInfo?.renderer;
    if (i3) {
      const e4 = o2(i3, t4, r3) || void 0;
      return e4 || i.getLogger(this).error("Failed to create renderer", { rendererDefinition: t4.drawingInfo.renderer, layer: this, context: r3 }), e4;
    }
    return te(t4, r3);
  }
  async connect(e3) {
    const [{ createConnection: t4 }] = await Promise.all([import("./createConnection-YI24XPKK.js"), this.load()]), r3 = this.geometryType ? y.toJSON(this.geometryType) : null, { customParameters: i3 = null, definitionExpression: o3 = null, geometryDefinition: n = null, maxReconnectionAttempts: a6 = 0, maxReconnectionInterval: p4 = 20, spatialReference: l5 = this.spatialReference } = e3 || this.createConnectionParameters(), m4 = t4(this.parsedUrl, this.spatialReference, l5, r3, o3, n, a6, p4, i3 ?? void 0), d3 = t([this.on("send-message-to-socket", ((e4) => m4.sendMessageToSocket(e4))), this.on("send-message-to-client", ((e4) => m4.sendMessageToClient(e4)))]);
    return m4.once("destroy", d3.remove), m4;
  }
  createConnectionParameters() {
    return { spatialReference: this.spatialReference, customParameters: this.customParameters, definitionExpression: this.definitionExpression, geometryDefinition: this.geometryDefinition, maxReconnectionAttempts: this.maxReconnectionAttempts, maxReconnectionInterval: this.maxReconnectionInterval };
  }
  createPopupTemplate(e3) {
    return p2(this, e3);
  }
  createQuery() {
    const e3 = new R();
    return e3.returnGeometry = true, e3.outFields = ["*"], e3.where = this.definitionExpression || "1=1", e3;
  }
  getFieldDomain(e3, t4) {
    if (!this.fields) return null;
    let r3 = null;
    return this.fields.some(((t5) => (t5.name === e3 && (r3 = t5.domain), !!r3))), r3;
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  serviceSupportsSpatialReference(e3) {
    return true;
  }
  sendMessageToSocket(e3) {
    this.emit("send-message-to-socket", e3);
  }
  sendMessageToClient(e3) {
    this.emit("send-message-to-client", e3);
  }
  async save(e3) {
    return this._debouncedSaveOperations(A2.SAVE, e3);
  }
  async saveAs(e3, t4) {
    return this._debouncedSaveOperations(A2.SAVE_AS, t4, e3);
  }
  write(e3, t4) {
    const r3 = t4?.messages;
    return this.webSocketUrl ? (r3?.push(re(this, "using a custom websocket connection cannot be written to web scenes and web maps")), null) : this.parsedUrl ? super.write(e3, t4) : (r3?.push(re(this, "using a client-side only connection without a url cannot be written to web scenes and web maps")), null);
  }
  async _fetchService(e3) {
    if (!!!this.webSocketUrl && this.parsedUrl) {
      if (!this.sourceJSON) {
        const { data: t4 } = await H(this.parsedUrl.path, { query: { f: "json", ...this.customParameters, ...this.parsedUrl.query }, responseType: "json", signal: e3 });
        this.sourceJSON = t4;
      }
    } else {
      if (!this.timeInfo?.trackIdField) throw new s("stream-layer:missing-metadata", "The stream layer trackIdField must be specified.");
      if (!this.objectIdField) {
        const e4 = this.fields.find(((e5) => "oid" === e5.type))?.name;
        if (!e4) throw new s("stream-layer:missing-metadata", "The stream layer objectIdField must be specified.");
        this.objectIdField = e4;
      }
      if (!this.fields) throw new s("stream-layer:missing-metadata", "The stream layer fields must be specified.");
      if (this.fields.some(((e4) => e4.name === this.objectIdField)) || this.fields.push(new m2({ name: this.objectIdField, alias: this.objectIdField, type: "oid" })), !this.geometryType) throw new s("stream-layer:missing-metadata", "The stream layer geometryType must be specified.");
      this.webSocketUrl && (this.url = this.webSocketUrl);
    }
    return this.read(this.sourceJSON, { origin: "service", portalItem: this.portalItem, portal: this.portalItem?.portal, url: this.parsedUrl }), g(this.renderer, this.fieldsIndex), I(this.timeInfo, this.fieldsIndex), this.objectIdField || (this.objectIdField = _), t3(this, { origin: "service" });
  }
};
r([m({ type: String })], ie.prototype, "copyright", void 0), r([m({ readOnly: true })], ie.prototype, "defaultPopupTemplate", null), r([m({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], ie.prototype, "definitionExpression", void 0), r([m({ type: String })], ie.prototype, "displayField", void 0), r([m({ type: c3 })], ie.prototype, "elevationInfo", void 0), r([m({ json: { origins: { "web-map": { read: false, write: false }, "portal-item": { read: false, write: false }, "web-scene": { read: false, write: false } } } })], ie.prototype, "featureReduction", null), r([m(te2.fields)], ie.prototype, "fields", void 0), r([m(te2.fieldsIndex)], ie.prototype, "fieldsIndex", void 0), r([m({ type: z, json: { name: "layerDefinition.definitionGeometry", write: true } })], ie.prototype, "geometryDefinition", void 0), r([m({ type: y.apiValues, json: { read: { reader: y.read } } })], ie.prototype, "geometryType", void 0), r([m(p3)], ie.prototype, "labelsVisible", void 0), r([m({ type: [A], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: l3 }, write: true } })], ie.prototype, "labelingInfo", void 0), r([m(d2)], ie.prototype, "legendEnabled", void 0), r([m({ type: ["show", "hide"], json: { origins: { "portal-item": { read: false, write: false } } } })], ie.prototype, "listMode", void 0), r([m({ type: x })], ie.prototype, "maxReconnectionAttempts", void 0), r([m({ type: x })], ie.prototype, "maxReconnectionInterval", void 0), r([m(v)], ie.prototype, "maxScale", void 0), r([m(j2)], ie.prototype, "minScale", void 0), r([m({ type: String })], ie.prototype, "objectIdField", void 0), r([m({ value: "ArcGISStreamLayer", type: ["ArcGISStreamLayer"] })], ie.prototype, "operationalLayerType", void 0), r([m({ readOnly: true })], ie.prototype, "outFields", void 0), r([m(l4)], ie.prototype, "popupEnabled", void 0), r([m({ type: q, json: { name: "popupInfo", write: true } })], ie.prototype, "popupTemplate", void 0), r([m({ type: i2 })], ie.prototype, "purgeOptions", void 0), r([m({ json: { read: false, write: false } })], ie.prototype, "refreshInterval", void 0), r([m({ types: m3, json: { origins: { service: { write: { target: "drawingInfo.renderer", enabled: false } }, "web-scene": { name: "layerDefinition.drawingInfo.renderer", types: u, write: true } }, write: { target: "layerDefinition.drawingInfo.renderer" } } })], ie.prototype, "renderer", null), r([o("service", "renderer", ["drawingInfo.renderer", "defaultSymbol"]), o("renderer", ["layerDefinition.drawingInfo.renderer", "layerDefinition.defaultSymbol"])], ie.prototype, "readRenderer", null), r([m((() => {
  const e3 = a(s3);
  return e3.json.origins["portal-item"] = { read: false, write: false }, e3;
})())], ie.prototype, "screenSizePerspectiveEnabled", void 0), r([m()], ie.prototype, "sourceJSON", void 0), r([m({ type: f, json: { origins: { service: { read: { source: "spatialReference" } } } } })], ie.prototype, "spatialReference", void 0), r([m({ json: { read: false } })], ie.prototype, "type", void 0), r([m(y2)], ie.prototype, "url", void 0), r([m({ type: Number })], ie.prototype, "updateInterval", void 0), r([m({ json: { read: false, write: false } })], ie.prototype, "useViewTime", void 0), r([m({ type: String })], ie.prototype, "webSocketUrl", void 0), ie = r([a3("esri.layers.StreamLayer")], ie);
var oe = ie;
export {
  oe as default
};
//# sourceMappingURL=StreamLayer-F6IJ4Y2U.js.map
