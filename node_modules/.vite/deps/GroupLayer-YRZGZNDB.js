import {
  e as e2
} from "./chunk-4EF2YJSI.js";
import {
  v
} from "./chunk-RD7I5PWG.js";
import "./chunk-STTWFGEB.js";
import {
  a as a4
} from "./chunk-AOQ2VQ5Z.js";
import {
  o as o2
} from "./chunk-NCWIYJUO.js";
import {
  A
} from "./chunk-BZSAIP56.js";
import {
  p
} from "./chunk-K54LZFQX.js";
import "./chunk-URBRKEAB.js";
import "./chunk-FT4FDH6N.js";
import {
  t as t2
} from "./chunk-XGN6BPAP.js";
import {
  b2 as b
} from "./chunk-CUM7BKUH.js";
import "./chunk-SIRTOV2N.js";
import {
  j
} from "./chunk-26WMKG2R.js";
import {
  S
} from "./chunk-ZQUEN26P.js";
import "./chunk-YIOMIF7S.js";
import "./chunk-65AYK4DL.js";
import "./chunk-KVCNEGMZ.js";
import "./chunk-EEG2HGFZ.js";
import "./chunk-VJN4WONG.js";
import "./chunk-7XQTZPAU.js";
import "./chunk-UZ3YWBWC.js";
import "./chunk-2EOHKZLO.js";
import "./chunk-TAUMJOU7.js";
import "./chunk-6S55M5FH.js";
import "./chunk-FOPBVVXE.js";
import {
  l as l3,
  l2 as l4,
  t as t3
} from "./chunk-Z7FGJYE5.js";
import {
  g
} from "./chunk-LI6PIIRD.js";
import {
  t
} from "./chunk-WSBT6M77.js";
import {
  l as l2
} from "./chunk-Y23TTNG6.js";
import {
  h
} from "./chunk-JUN27FQK.js";
import "./chunk-GIMN3QZ5.js";
import "./chunk-INI6MHIQ.js";
import "./chunk-I4VURT5T.js";
import "./chunk-QUZZIDFR.js";
import "./chunk-2R53FNGL.js";
import "./chunk-KA2INOMU.js";
import "./chunk-CUUDF5R2.js";
import "./chunk-HGJX23PN.js";
import "./chunk-N77BULFI.js";
import "./chunk-NEIJCC5O.js";
import "./chunk-UMUW6RKM.js";
import "./chunk-XRTNDGK2.js";
import "./chunk-XLLV5QUO.js";
import "./chunk-4AKMPOG7.js";
import "./chunk-BZEUWBAD.js";
import "./chunk-H6ZVHKNF.js";
import "./chunk-2CJBZZN7.js";
import "./chunk-YAXW2DL6.js";
import "./chunk-RKF6WUZT.js";
import "./chunk-ZBYB4REQ.js";
import "./chunk-YYLIW24Q.js";
import "./chunk-B7BH33JH.js";
import "./chunk-UGTAETXR.js";
import {
  k as k2
} from "./chunk-GUADICE2.js";
import "./chunk-AY7ZETF7.js";
import "./chunk-NYEIVTKF.js";
import "./chunk-ZJQPHR3K.js";
import "./chunk-XK66VICH.js";
import "./chunk-HLST5KGP.js";
import {
  o
} from "./chunk-PDFWMXUS.js";
import "./chunk-5HCEYXY5.js";
import {
  r as r2
} from "./chunk-H6YQECN2.js";
import "./chunk-6JCZVSRM.js";
import "./chunk-LLGOMKTE.js";
import "./chunk-TRJUNZSW.js";
import {
  U,
  a as a3,
  l,
  w
} from "./chunk-IBLVGHDR.js";
import "./chunk-SRNKPAJX.js";
import "./chunk-MOMLPET6.js";
import "./chunk-GYTEHLOC.js";
import "./chunk-SPNGBO6M.js";
import "./chunk-SDIBXPSJ.js";
import "./chunk-LPCUYJ2B.js";
import "./chunk-67AKDROO.js";
import "./chunk-JA3AQLAK.js";
import {
  e,
  m2 as m
} from "./chunk-GWXO4XME.js";
import {
  a2
} from "./chunk-S62CSPIH.js";
import "./chunk-X26VPODZ.js";
import "./chunk-XNYPRDKK.js";
import "./chunk-YWPUEUEP.js";
import "./chunk-T3PXBZJ3.js";
import "./chunk-BMQ3IPHR.js";
import "./chunk-JNYZ3I5R.js";
import {
  r
} from "./chunk-Y4BWIIWH.js";
import "./chunk-3QHX4R4B.js";
import "./chunk-TTJIKWMC.js";
import {
  n
} from "./chunk-CMEG2CKL.js";
import "./chunk-VHPBXBDE.js";
import "./chunk-6ACTD4UJ.js";
import "./chunk-5REYU5G2.js";
import {
  a,
  k
} from "./chunk-N626Y23H.js";
import {
  i3 as i
} from "./chunk-TJPLHZCD.js";
import "./chunk-KLFJ5V5G.js";
import "./chunk-EP7EDY5M.js";

// node_modules/@arcgis/core/layers/GroupLayer.js
var C = class extends p(t2(b(j(l4(l3(S(h))))))) {
  constructor(e3) {
    super(e3), this.allLayers = new l2({ getCollections: () => [this.layers], getChildrenFunction: (e4) => "layers" in e4 ? e4.layers : null }), this.allTables = t3(this), this.fullExtent = void 0, this.operationalLayerType = "GroupLayer", this.spatialReference = void 0, this.type = "group", this._debouncedSaveOperations = k((async (e4, r3, t4) => {
      const { save: i2, saveAs: s } = await import("./groupLayerUtils-P7MFBE4I.js");
      switch (e4) {
        case A.SAVE:
          return i2(this, r3);
        case A.SAVE_AS:
          return s(this, t4, r3);
      }
    }));
  }
  initialize() {
    this._enforceVisibility(this.visibilityMode, this.visible), this.addHandles([l((() => {
      let e3 = this.parent;
      for (; e3 && "parent" in e3 && e3.parent; ) e3 = e3.parent;
      return e3 && e2 in e3;
    }), ((e3) => {
      const r3 = "prevent-adding-tables";
      this.removeHandles(r3), e3 && (this.tables.removeAll(), this.addHandles(a3((() => this.tables), "before-add", ((e4) => {
        e4.preventDefault(), i.getLogger(this).errorOnce("tables", "tables in group layers in a webscene are not supported. Please move the tables from the group layer to the webscene if you want to persist them.");
      })), r3));
    }), w), l((() => this.visible), this._onVisibilityChange.bind(this), U)]);
  }
  destroy() {
    this.allLayers.destroy(), this.allTables.destroy();
  }
  get sourceIsPortalItem() {
    return this.portalItem && this.originIdOf("portalItem") === e.USER;
  }
  _writeLayers(e3, r3, t4, i2) {
    const s = [];
    if (!e3) return s;
    e3.forEach(((e4) => {
      const r4 = g(e4, i2.webmap ? i2.webmap.getLayerJSONFromResourceInfo(e4) : null, i2);
      r4?.layerType && s.push(r4);
    })), r3.layers = s;
  }
  set portalItem(e3) {
    this._set("portalItem", e3);
  }
  readPortalItem(e3, r3, t4) {
    const { itemId: i2, layerType: s } = r3;
    if ("GroupLayer" === s && i2) return new k2({ id: i2, portal: t4?.portal });
  }
  writePortalItem(e3, r3) {
    e3?.id && (r3.itemId = e3.id);
  }
  set visibilityMode(e3) {
    const r3 = this._get("visibilityMode") !== e3;
    this._set("visibilityMode", e3), r3 && this._enforceVisibility(e3, this.visible);
  }
  async beforeSave() {
    return o2(this);
  }
  load(e3) {
    const r3 = this.loadFromPortal({ supportedTypes: ["Feature Service", "Feature Collection", "Group Layer", "Scene Service", "Video Service"], layerModuleTypeMap: a4, populateGroupLayer: v }, e3).catch(((e4) => {
      if (a(e4), this.sourceIsPortalItem) throw e4;
    }));
    return this.addResolvingPromise(r3), Promise.resolve(this);
  }
  async loadAll() {
    return t(this, ((e3) => {
      e3(this.layers, this.tables);
    }));
  }
  async save(e3) {
    return this._debouncedSaveOperations(A.SAVE, e3);
  }
  async saveAs(e3, r3) {
    return this._debouncedSaveOperations(A.SAVE_AS, r3, e3);
  }
  layerAdded(e3) {
    e3.visible && "exclusive" === this.visibilityMode ? this._turnOffOtherLayers(e3) : "inherited" === this.visibilityMode && (e3.visible = this.visible), this.hasHandles(e3.uid) ? console.error(`Layer read to Grouplayer: uid=${e3.uid}`) : this.addHandles(l((() => e3.visible), ((r3) => this._onChildVisibilityChange(e3, r3)), U), e3.uid);
  }
  layerRemoved(e3) {
    this.removeHandles(e3.uid), this._enforceVisibility(this.visibilityMode, this.visible);
  }
  _turnOffOtherLayers(e3) {
    this.layers.forEach(((r3) => {
      r3 !== e3 && (r3.visible = false);
    }));
  }
  _enforceVisibility(e3, r3) {
    if (!n(this).initialized) return;
    const t4 = this.layers;
    let i2 = t4.find(((e4) => e4.visible));
    switch (e3) {
      case "exclusive":
        t4.length && !i2 && (i2 = t4.at(0), i2.visible = true), this._turnOffOtherLayers(i2);
        break;
      case "inherited":
        t4.forEach(((e4) => {
          e4.visible = r3;
        }));
    }
  }
  _onVisibilityChange(e3) {
    "inherited" === this.visibilityMode && this.layers.forEach(((r3) => {
      r3.visible = e3;
    }));
  }
  _onChildVisibilityChange(e3, r3) {
    switch (this.visibilityMode) {
      case "exclusive":
        r3 ? this._turnOffOtherLayers(e3) : this._isAnyLayerVisible() || (e3.visible = true);
        break;
      case "inherited":
        e3.visible = this.visible;
    }
  }
  _isAnyLayerVisible() {
    return this.layers.some(((e3) => e3.visible));
  }
};
r([m({ readOnly: true, dependsOn: [] })], C.prototype, "allLayers", void 0), r([m({ readOnly: true })], C.prototype, "allTables", void 0), r([m({ json: { read: true, write: true } })], C.prototype, "blendMode", void 0), r([m()], C.prototype, "fullExtent", void 0), r([m({ readOnly: true })], C.prototype, "sourceIsPortalItem", null), r([m({ json: { read: false, write: { ignoreOrigin: true } } })], C.prototype, "layers", void 0), r([r2("layers")], C.prototype, "_writeLayers", null), r([m({ type: ["GroupLayer"] })], C.prototype, "operationalLayerType", void 0), r([m({ json: { origins: { "web-map": { read: false, write: { overridePolicy(e3, r3, t4) {
  return { enabled: "Group Layer" === e3?.type && t4?.initiator !== this };
} } }, "web-scene": { read: false, write: false } } } })], C.prototype, "portalItem", null), r([o("web-map", "portalItem", ["itemId"])], C.prototype, "readPortalItem", null), r([r2("web-map", "portalItem", { itemId: { type: String } })], C.prototype, "writePortalItem", null), r([m()], C.prototype, "spatialReference", void 0), r([m({ json: { read: false }, readOnly: true, value: "group" })], C.prototype, "type", void 0), r([m({ type: ["independent", "inherited", "exclusive"], value: "independent", json: { write: true, origins: { "web-map": { type: ["independent", "exclusive"], write: (e3, r3, t4) => {
  "inherited" !== e3 && (r3[t4] = e3);
} } } } })], C.prototype, "visibilityMode", null), C = r([a2("esri.layers.GroupLayer")], C);
var E = C;
export {
  E as default
};
//# sourceMappingURL=GroupLayer-YRZGZNDB.js.map
